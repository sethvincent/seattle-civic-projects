// Generated by CoffeeScript 1.6.2
(function() {
  Handlebars.registerHelper('makeFullURI', function(uri) {
    if (uri.substr(0, 4) === 'http') {
      return uri;
    } else {
      return "http://" + uri;
    }
  });

  $(function() {
    var $project_listing, project_handlebars, project_template, projects, spreadsheet_url;

    spreadsheet_url = 'http://spreadsheets.google.com/feeds/list/0Ao0MEp85bWtGdEJ6alJDUWptTTlNbnN1TC03d1NMNlE/od6/public/values?alt=json-in-script';
    projects = [];
    $project_listing = $('#project-listing');
    project_handlebars = $('#project-template').html();
    project_template = Handlebars.compile(project_handlebars);
    return $.getJSON(spreadsheet_url + '&callback=?', function(data) {
      var $row, i, project, projects_slice, slice_size, _i, _j, _len, _ref, _results;

      $.each(data.feed.entry, function(index, project) {
        return projects.push({
          name: project.gsx$name.$t,
          code_url: project.gsx$codeurl.$t,
          public_url: project.gsx$publicurl.$t,
          description: project.gsx$description.$t,
          status: project.gsx$devstatus.$t,
          contributors: project.gsx$contributors.$t,
          notes: project.gsx$notes.$t,
          project_tags: project.gsx$projecttags.$t.split(','),
          technology_tags: project.gsx$technologytags.$t.split(','),
          thumbnail_url: project.gsx$screenshoturl.$t,
          last_update: project.gsx$lastupdate.$t
        });
      });
      slice_size = 3;
      _results = [];
      for (i = _i = 0, _ref = projects.length; slice_size > 0 ? _i < _ref : _i > _ref; i = _i += slice_size) {
        projects_slice = projects.slice(i, i + slice_size);
        $row = $('<div class="row"></div>');
        for (_j = 0, _len = projects_slice.length; _j < _len; _j++) {
          project = projects_slice[_j];
          $row.append(project_template(project));
        }
        _results.push($project_listing.append($row));
      }
      return _results;
    });
  });

}).call(this);
